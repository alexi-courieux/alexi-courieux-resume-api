services:
  db:
    build:
      context: db
      dockerfile: Dockerfile
    ports:
      - "3306:3306"
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_SUPER_PASSWORD_FILE: /run/secrets/mysql_super_password
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
    secrets:
      - mysql_root_password
      - mysql_super_password
      - mysql_password
    volumes:
      - db_data:/var/lib/mysql
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    healthcheck:
      test: ["CMD-SHELL", 'mysqladmin ping']
      interval: 10s
      timeout: 2s
      retries: 10

  app:
    profiles:
      - backend
    build:
      context: app
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DB_PASSWORD_FILE : /run/secrets/mysql_password
    secrets:
      - mysql_password
    command: ["python", "startup.py"]
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 2s
      retries: 10          

  sqitch:
    profiles:
      - migrate
    build: 
      context: db/sqitch
      dockerfile: Dockerfile
    env_file:
    - .env
    environment:
      MYSQL_SUPER_PASSWORD_FILE: /run/secrets/mysql_super_password
    secrets:
      - mysql_super_password
    depends_on:
      db:
        condition: service_healthy

secrets:
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  mysql_super_password:
    file: ./secrets/mysql_super_password.txt
  mysql_password:
    file: ./secrets/mysql_password.txt

volumes:
  db_data: